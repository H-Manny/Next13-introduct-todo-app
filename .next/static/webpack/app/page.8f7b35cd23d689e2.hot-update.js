"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/api.ts":
/*!********************!*\
  !*** ./src/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTodo: function() { return /* binding */ addTodo; },\n/* harmony export */   deleteTodo: function() { return /* binding */ deleteTodo; },\n/* harmony export */   editTodo: function() { return /* binding */ editTodo; },\n/* harmony export */   getAllTodos: function() { return /* binding */ getAllTodos; }\n/* harmony export */ });\n/**\n * Retrieves all todos from the server.\n *\n * @return {Promise<Task[]>} An array of todos.\n */ const getAllTodos = async ()=>{\n    const res = await fetch(\"http://localhost:3001/tasks\", {\n        cache: \"no-store\" // SSR or CSR\n    });\n    const todos = await res.json();\n    return todos;\n};\nconst addTodo = async (todo)=>{\n    const res = await fetch(\"http://localhost:3001/tasks\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n    });\n    const newTodo = await res.json();\n    return newTodo;\n};\nconst editTodo = async (id, newText)=>{\n    const res = await fetch(\"http://localhost:3001/tasks/\".concat(id), {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            text: newText\n        })\n    });\n    const updatedTodo = await res.json();\n    return updatedTodo;\n};\nconst deleteTodo = async (id)=>{\n    const res = await fetch(\"http://localhost:3001/tasks/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    const deleteTodo = await res.json();\n    return deleteTodo;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOzs7O0NBSUMsR0FDTSxNQUFNQSxjQUFjO0lBQ3pCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSwrQkFBK0I7UUFDckRDLE9BQU8sV0FBVyxhQUFhO0lBQ2pDO0lBQ0EsTUFBTUMsUUFBUSxNQUFNSCxJQUFJSSxJQUFJO0lBRTVCLE9BQU9EO0FBQ1QsRUFBQztBQUVNLE1BQU1FLFVBQVUsT0FBT0M7SUFDNUIsTUFBTU4sTUFBTSxNQUFNQyxNQUFNLCtCQUErQjtRQUNyRE0sUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQWdCO1FBQ2xCO1FBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0w7SUFDdkI7SUFDQSxNQUFNTSxVQUFVLE1BQU1aLElBQUlJLElBQUk7SUFFOUIsT0FBT1E7QUFDVCxFQUFDO0FBR00sTUFBTUMsV0FBVyxPQUFPQyxJQUFZQztJQUN6QyxNQUFNZixNQUFNLE1BQU1DLE1BQU0sK0JBQWtDLE9BQUhhLEtBQU07UUFDM0RQLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtRQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7WUFBRUssTUFBTUQ7UUFBUTtJQUN2QztJQUNBLE1BQU1FLGNBQWMsTUFBTWpCLElBQUlJLElBQUk7SUFFbEMsT0FBT2E7QUFDVCxFQUFDO0FBRU0sTUFBTUMsYUFBYSxPQUFPSjtJQUMvQixNQUFNZCxNQUFNLE1BQU1DLE1BQU0sK0JBQWtDLE9BQUhhLEtBQU07UUFDM0RQLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtJQUNGO0lBQ0EsTUFBTVUsYUFBYSxNQUFNbEIsSUFBSUksSUFBSTtJQUVqQyxPQUFPYztBQUNULEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwaS50cz84NzY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhc2sgfSBmcm9tIFwiLi90eXBlc1wiO1xuXG4vKipcbiAqIFJldHJpZXZlcyBhbGwgdG9kb3MgZnJvbSB0aGUgc2VydmVyLlxuICpcbiAqIEByZXR1cm4ge1Byb21pc2U8VGFza1tdPn0gQW4gYXJyYXkgb2YgdG9kb3MuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBbGxUb2RvcyA9IGFzeW5jICgpOiBQcm9taXNlPFRhc2tbXT4gPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDozMDAxL3Rhc2tzJywge1xuICAgIGNhY2hlOiAnbm8tc3RvcmUnIC8vIFNTUiBvciBDU1JcbiAgfSk7XG4gIGNvbnN0IHRvZG9zID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4gdG9kb3M7XG59XG5cbmV4cG9ydCBjb25zdCBhZGRUb2RvID0gYXN5bmMgKHRvZG86IFRhc2spOiBQcm9taXNlPFRhc2s+ID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS90YXNrcycsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0b2RvKSxcbiAgfSk7XG4gIGNvbnN0IG5ld1RvZG8gPSBhd2FpdCByZXMuanNvbigpO1xuXG4gIHJldHVybiBuZXdUb2RvO1xufVxuXG5cbmV4cG9ydCBjb25zdCBlZGl0VG9kbyA9IGFzeW5jIChpZDogc3RyaW5nLCBuZXdUZXh0OiBzdHJpbmcpOiBQcm9taXNlPFRhc2s+ID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMS90YXNrcy8ke2lkfWAsIHtcbiAgICBtZXRob2Q6ICdQVVQnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgdGV4dDogbmV3VGV4dCB9KSxcbiAgfSk7XG4gIGNvbnN0IHVwZGF0ZWRUb2RvID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4gdXBkYXRlZFRvZG87XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVUb2RvID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFRhc2s+ID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMS90YXNrcy8ke2lkfWAsIHtcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICB9LFxuICB9KTtcbiAgY29uc3QgZGVsZXRlVG9kbyA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgcmV0dXJuIGRlbGV0ZVRvZG87XG59Il0sIm5hbWVzIjpbImdldEFsbFRvZG9zIiwicmVzIiwiZmV0Y2giLCJjYWNoZSIsInRvZG9zIiwianNvbiIsImFkZFRvZG8iLCJ0b2RvIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwibmV3VG9kbyIsImVkaXRUb2RvIiwiaWQiLCJuZXdUZXh0IiwidGV4dCIsInVwZGF0ZWRUb2RvIiwiZGVsZXRlVG9kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api.ts\n"));

/***/ })

});